{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/Toolbar/Toolbar.js","new/recoveredcases.js","components/Common/Loading.jsx","components/Data/Facts.jsx","new/confirmed.js","new/newcase.js","new/deaths.js","homepage.js","world/worldwide.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","App.js","serviceWorker.js","index.js"],"names":["drawerToggleButton","props","className","onClick","click","toolbar","DrawerToggleButton","drawerClickHandler","to","RecoveredCases","recoveredProps","newcases","oldRecover","difference","todayRecover","spanClass","fontSize","fontStyle","paddingLeft","color","spanClass2","fontWeight","latest_stat_by_country","map","e","key","id","style","background","padding","textAlign","display","paddingRight","total_recovered","Loading","React","Component","Facts","state","loading","rank","emergency","dangerous","mild","threat","fetch","responses","json","dataFacts","j","countries_stat","length","country_name","this","setState","spanclasses","Fragment","Confirmed","confirmedProps","heading","date","items","query","i","total_cases","paddingBottom","NewCase","newcaseProps","oldcases","new_cases","Deaths","deathProps","deathPrev","d","total_deaths","new_deaths","Homepage","drawerToggleClickHandler","prevState","sideDrawerOpen","backdropToggleClickHandler","today","Date","toISOString","slice","url","response","data","newArr","record_date","olddate","split","urlSecond","responseSec","dataSec","stat_by_country","height","marginTop","WorldWide","paddingTop","sideDrawer","classes","show","backdrop","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e712d203.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SideDrawer.css';\r\n\r\n\r\nconst drawerToggleButton  = props => (\r\n    <button className=\"hamburger\" onClick={props.click} >\r\n        <div className=\"hamburger-piece\"></div>\r\n        <div className=\"hamburger-piece\"></div>\r\n        <div className=\"hamburger-piece\"></div>\r\n    </button>\r\n)\r\n\r\n\r\nexport default drawerToggleButton;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\r\n\r\nconst toolbar = props => (\r\n    <header className=\"toolbar\">\r\n        <nav className=\"toolbar_navigation\">\r\n            <div>\r\n                <DrawerToggleButton  click={props.drawerClickHandler} />\r\n            </div>\r\n            <div className=\"toolbar_logo\">\r\n                <Link to=\"/\">\r\n                    Aurang!\r\n                </Link>\r\n            </div>\r\n            <div className=\"spacer\" />\r\n            <div className=\"toolbar_navigation_items\">\r\n                <ul>\r\n                    <Link to=\"/\">\r\n                        <li>\r\n                            Pakistan\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/worldwide\">\r\n                        <li>\r\n                            World Cases\r\n                        </li>\r\n                    </Link>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nconst RecoveredCases = (props) => {\r\n    const {newcases, oldRecover, todayRecover} = props.recoveredProps\r\n    let difference = todayRecover - oldRecover;\r\n     let spanClass ={\r\n        fontSize:'12px', fontStyle:'italic', paddingLeft:'10px', color:'black'\r\n    }\r\n    let spanClass2 ={\r\n        fontSize:'12px', fontStyle:'italic', paddingLeft:'10px', color:'green', fontWeight:'bold'\r\n    }\r\n    \r\n    return(\r\n        <div className=\"new_cases\">\r\n            {newcases.latest_stat_by_country.map((e) => (\r\n                <div key={e.id}>\r\n                    <div className=\"new_cases_title\" style={{\r\n                            background:'#1ae396'\r\n                            \r\n                    }}>\r\n                        <h1>\r\n                            Newly Recovered\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"row\" style={{padding:'20px 15px 5px 15px'}}>\r\n                        <div className=\"col-6\">\r\n                            <h4 style={{textAlign:'right'}}>\r\n                                Today:\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"col-6\" style={{display:'flex'}}>\r\n                            <h4 style={{textAlign:'left', paddingRight:'10px'}}>\r\n                                {e.total_recovered}\r\n                                <span style={difference  === 0 ? spanClass : spanClass2}>\r\n                                    +{difference}\r\n                                </span>\r\n                            </h4>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\" style={{padding:'5px 15px 20px 15px'}}>\r\n                        <div className=\"col-6\">\r\n                            <h4 style={{textAlign:'right'}}>\r\n                                Yesterday:\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h4 style={{textAlign:'left', paddingRight:'10px'}}>\r\n                                {oldRecover}\r\n                            </h4>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecoveredCases;","import React from  'react';\r\nimport './Loading.css';\r\n\r\nclass Loading extends React.Component{\r\n    render(){\r\n        return(\r\n            <div id=\"loader\"></div>\r\n        )\r\n    }\r\n}\r\nexport default Loading;","import React from 'react';\r\nimport './Facts.css'\r\n\r\nclass Facts extends React.Component{\r\n    state = {\r\n        loading: true,\r\n        rank: null,\r\n        emergency:10,\r\n        dangerous: 20,\r\n        mild:30,\r\n        threat:31,\r\n}\r\n\r\n    async componentDidMount(){\r\n        const urlLink = \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php\";\r\n        const responses = await fetch(urlLink, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n            \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"7232dd1eaamshbe4d4b7f0daf8dfp1e2bc6jsnee3f849aead5\"\r\n         }\r\n        })\r\n\r\n        const dataFacts = await responses.json();\r\n        \r\n        let j;\r\n        let rank = 0;\r\n        for(j = 0; j < dataFacts.countries_stat.length ; j++)\r\n        {\r\n            if(dataFacts.countries_stat[j].country_name === \"Pakistan\")\r\n            {\r\n                rank = j;\r\n                break;\r\n            }\r\n        }\r\n        this.setState({\r\n            loading:false,\r\n            rank: rank,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let {rank, emergency, dangerous, mild, threat} = this.state;\r\n        let spanclasses = \"text\";\r\n        if(rank <= emergency) {\r\n            spanclasses = \"text e\"\r\n        }\r\n        if((rank > emergency) && (rank <=dangerous)){\r\n            spanclasses = \"text d\"\r\n        }\r\n        if((rank > dangerous) && (rank <= mild)){\r\n            spanclasses=\"text m\"\r\n        }\r\n        if(rank >= threat){\r\n            spanclasses=\"text t\"\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                Pakistan's rank in the world for most cases: <span className={spanclasses}>\r\n                    <strong>\r\n                        {this.state.rank}\r\n                    </strong>\r\n                </span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Facts;","import React from 'react';\r\nimport Facts from '../components/Data/Facts'\r\nconst Confirmed = (props) => {\r\n    const {heading, date, items, query} = props.confirmedProps\r\n    return(\r\n        <div>\r\n            {items.latest_stat_by_country.map((i) => (\r\n                        <div key={i.id}>\r\n                            <div className=\"cards\">\r\n                                <div className=\"start\">\r\n                                    <h4>\r\n                                        {heading}{query}\r\n                                    </h4>\r\n                                    <h1>\r\n                                        Confirmed Cases: {i.total_cases}\r\n                                    </h1>\r\n                                </div>\r\n                                <h5>\r\n                                    <Facts />\r\n                                </h5>\r\n                                <p>\r\n                                   Date: {date[0]}\r\n                                </p>\r\n                                <p style={{paddingBottom:'5px'}}>\r\n                                    Time: {date[1]}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirmed;","import React from 'react';\r\nimport '../components/Data/NewCases.css';\r\n\r\nconst NewCase = (props) => {\r\n    const {newcases, oldcases} = props.newcaseProps;\r\n    \r\n    return(\r\n        <div className=\"new_cases\">\r\n            {newcases.latest_stat_by_country.map((e) => (\r\n                <div key={e.id}>\r\n                    <div className=\"new_cases_title\" style={{\r\n                            background: '#e5a929'\r\n                    }}>\r\n                        <h1>\r\n                            New Cases\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"row\" style={{padding:'20px 15px 5px 15px'}}>\r\n                        <div className=\"col-6\">\r\n                            <h4 style={{textAlign:'right'}}>\r\n                                Today:\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"col-6\" style={{display:'flex'}}>\r\n                            <h4 style={{textAlign:'left', paddingRight:'10px'}}>\r\n                                {e.new_cases}\r\n                            </h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\" style={{padding:'5px 15px 20px 15px'}}>\r\n                        <div className=\"col-6\">\r\n                            <h4 style={{textAlign:'right'}}>\r\n                                Yesterday:\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h4 style={{textAlign:'left', paddingRight:'10px'}}>\r\n                                {oldcases}\r\n                            </h4>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewCase;","import React from 'react';\r\n\r\nconst Deaths = (props) => {\r\n    const {newcases, deathPrev} = props.deathProps;\r\n    let spanClass2 ={\r\n        fontSize:'12px', fontStyle:'italic', paddingLeft:'10px', color:'red', fontWeight:'bold'\r\n    }\r\n    return(\r\n        <div className=\"new_cases\">\r\n            {newcases.latest_stat_by_country.map((d) => (\r\n                <div key={d.id}>\r\n                <div className=\"new_cases_title\" style={{\r\n                        background: 'rgb(213,21,38)'\r\n                }}>\r\n                    <h1>\r\n                        Total Deaths\r\n                    </h1>\r\n                </div>\r\n                <div className=\"row\" style={{padding:'20px 15px 5px 15px'}}>\r\n                    <div className=\"col-6\">\r\n                        <h4 style={{textAlign:'right'}}>\r\n                            Today:\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"col-6\" style={{display:'flex'}}>\r\n                        <h4 style={{textAlign:'left', paddingRight:'10px'}}>\r\n                            {d.total_deaths}\r\n                            <span style={spanClass2}>\r\n                                +{d.new_deaths}\r\n                            </span>\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" style={{padding:'5px 15px 20px 15px'}}>\r\n                    <div className=\"col-6\">\r\n                        <h4 style={{textAlign:'right'}}>\r\n                            Yesterday:\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h4 style={{textAlign:'left', paddingRight:'10px'}}>\r\n                            {deathPrev}\r\n                        </h4>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Deaths;","import React from 'react';\r\n//import DataFile from './DataFile';\r\n// import CasesByCountry from './CasesByCountry'\r\n//import SideDrawer from './components/SideDrawer/SideDrawer';\r\n//import Backdrop from './components/Backdrop/Backdrop';\r\n//import NewCases from './components/Data/NewCases';\r\nimport RecoveredCases from './new/recoveredcases';\r\nimport Loader from './components/Common/Loading';\r\nimport Confirmed from './new/confirmed';\r\nimport NewCase from './new/newcase';\r\nimport Deaths from './new/deaths';\r\n\r\n\r\nclass Homepage extends React.Component{\r\n    state={\r\n      loading: true,\r\n      items: [],\r\n      heading: \"Covid-19 Cases in \",\r\n      query: \"Pakistan\",\r\n      date:[],\r\n      newcases:null,\r\n      oldcases:null,\r\n      oldRecover:null,\r\n      todayRecover:null,\r\n      deathPrev:null,\r\n    }\r\n    async componentDidMount() {\r\n      let today = new Date().toISOString().slice(0, 10)\r\n      const url = `https://coronavirus-monitor.p.rapidapi.com/coronavirus/latest_stat_by_country.php?country=${this.state.query}`\r\n      const response = await fetch(url, {\r\n          \"method\": \"GET\",\r\n          \"headers\": {\r\n            \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"7232dd1eaamshbe4d4b7f0daf8dfp1e2bc6jsnee3f849aead5\"\r\n                }})\r\n  \r\n          const data = await response.json()\r\n          const items = data\r\n          \r\n          //this.setState({items: items, loading: false})\r\n          //console.log(data)\r\n  \r\n          let newArr = []\r\n          newArr = items.latest_stat_by_country[0].record_date\r\n          let olddate = newArr.split(' ')\r\n          let date = olddate\r\n          //console.log(date)\r\n  \r\n  \r\n  \r\n        //Second Query\r\n  \r\n        const urlSecond = `https://coronavirus-monitor.p.rapidapi.com/coronavirus/history_by_particular_country_by_date.php?country=${this.state.query}&date=${today}`\r\n        const responseSec = await fetch(urlSecond, {\r\n          \"method\": \"GET\",\r\n          \"headers\": {\r\n              \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n              \"x-rapidapi-key\": \"7232dd1eaamshbe4d4b7f0daf8dfp1e2bc6jsnee3f849aead5\"\r\n          }\r\n        })\r\n        const dataSec = await responseSec.json()\r\n        const oldcases = dataSec.stat_by_country[0].new_cases\r\n        //const todayCases = data.latest_stat_by_country[0].new_cases\r\n        \r\n  \r\n  \r\n        //Third Query\r\n  \r\n        const todayRecover = data.latest_stat_by_country[0].total_recovered\r\n        const oldRecover = dataSec.stat_by_country[0].total_recovered\r\n  \r\n  \r\n        //Fourth Query\r\n  \r\n        const deathPrev = dataSec.stat_by_country[0].total_deaths\r\n  \r\n  \r\n        //All SetState Statements\r\n        \r\n        this.setState({\r\n            items:items,\r\n            newcases:data,\r\n            oldcases:oldcases,\r\n            date:date,\r\n            oldRecover:oldRecover,\r\n            todayRecover:todayRecover,\r\n            deathPrev:deathPrev,\r\n            loading: false,\r\n        })\r\n     }\r\n  \r\n  \r\n    drawerToggleClickHandler = () =>{\r\n      this.setState((prevState) => {\r\n        return {sideDrawerOpen: !prevState.sideDrawerOpen}\r\n      })\r\n    }\r\n  \r\n    backdropToggleClickHandler = () => {\r\n      this.setState({\r\n        sideDrawerOpen:false\r\n      })\r\n    }\r\n    render(){\r\n     \r\n      let {loading, items,query, heading, date, newcases, oldcases, oldRecover, todayRecover, deathPrev} = this.state;\r\n      let confirmedProps = {heading, date, items, query}\r\n      let newcaseProps = {newcases, oldcases};\r\n      let recoveredProps = {newcases, oldRecover, todayRecover}\r\n      let deathProps = {newcases, deathPrev}\r\n      if(loading)\r\n      {\r\n        return <Loader />\r\n      }\r\n      if(!items)\r\n      {\r\n        return(\r\n          <div>Hello, sorry</div>\r\n        )\r\n      }\r\n      return (\r\n        <div style={{height:'100%'}}>\r\n          \r\n          <div style={{marginTop:'70px'}}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 offset-lg-2\">\r\n                  <Confirmed confirmedProps={confirmedProps} />\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                      <NewCase newcaseProps={newcaseProps} />\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <RecoveredCases recoveredProps={recoveredProps} />\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <Deaths deathProps={deathProps} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Homepage;\r\n  ","import React from 'react';\r\n\r\nconst WorldWide = () => {\r\n    return(\r\n        <div style={{marginTop:'70px'}}>\r\n            <h2 style={{textAlign:'center', paddingTop:'100px'}}>Coming soon</h2>\r\n            <p style={{textAlign:'center'}}>will be implemented once I reach home...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldWide;","import React from 'react';\r\nimport './SideDrawer.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst sideDrawer = props => {\r\n    \r\n    let classes = 'side_drawer'\r\n    if(props.show){\r\n        classes = 'side_drawer open'\r\n    }\r\n    return(\r\n        <nav className={classes} onClick={props.click}>\r\n            <ul>\r\n            <Link to=\"/\">\r\n                <li>\r\n                    Pakistan\r\n                </li>\r\n            </Link>\r\n            <Link to=\"/worldwide\">\r\n                <li>\r\n                    World Cases\r\n                </li>\r\n            </Link>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default sideDrawer;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n    <div className=\"backdrop\" onClick={props.click} />\r\n)\r\n\r\nexport default backdrop;","import React from 'react';\nimport './App.css';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport Homepage from './homepage';\nimport WorldWide from './world/worldwide';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      sideDrawerOpen: false,\n      loading:true\n    }\n  }\n  drawerToggleClickHandler = () =>{\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen}\n    })\n  }\n\n  backdropToggleClickHandler = () => {\n    this.setState({\n      sideDrawerOpen:false\n    })\n  }\n  render(){\n    let backdrop;\n\n    if(this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropToggleClickHandler} />\n    }\n    return (\n      <div style={{height:'100%'}}>\n        <Router>\n          <Toolbar />\n            <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n            <SideDrawer show={this.state.sideDrawerOpen} click={this.drawerToggleClickHandler} />\n            {backdrop}\n          <Switch>\n            <Route path=\"/\" exact component={Homepage} />\n            <Route path=\"/worldwide\" component={WorldWide} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}